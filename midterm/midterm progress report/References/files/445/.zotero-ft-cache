Sign up Sign in

    Explore
    Features
    Enterprise
    Blog

This repository
This repository
All repositories

    Star 2,382
    Fork 811

public toastdriven / django-tastypie Octocat-spinner-32

    Code Octocat-spinner-32
    Issues 481 Octocat-spinner-32
    Pull Requests 191 Octocat-spinner-32

    Pulse Octocat-spinner-32
    Graphs Octocat-spinner-32
    Network Octocat-spinner-32

HTTPS clone URL
Subversion checkout URL

You can clone with HTTPS , or Subversion .
Download ZIP

Show File Finder
branch: master
Switch branches/tags

    Branches
    Tags

1062-optimize-related-resource-queries
alphanumeric-pk-urls
api_browser
bug/travis-db-artifact
django-1.5-devel
gh-pages
issues/397
issues/755
master
piecrust
py3
Nothing to show
v0.11.0
v0.10.0
v0.9.16
v0.9.15
v0.9.14
v0.9.13
v0.9.12
v0.9.11
v0.9.10
v0.9.9
v0.9.7
v0.9.6
v0.9.0
v0.8.3
v0.8.2
v0.8.1
Nothing to show
django-tastypie / docs / index.rst
Kirill Zaborsky qrilka 13 days ago
Fixed biplist URL

8 contributors
Daniel Lindsley Chris Adams George Dorn Issac Kelly Deric Crago Philip Neustrom Kirill Zaborsky Ben Spaulding
Users who have contributed to this file

    Daniel Lindsley toastdriven
    Chris Adams acdha
    George Dorn georgedorn
    Issac Kelly issackelly
    Deric Crago dericcrago
    Philip Neustrom philipn
    Kirill Zaborsky qrilka
    Ben Spaulding benspaulding

file 168 lines (122 sloc) 4.501 kb
Edit Raw Blame History
Delete
Welcome to Tastypie!

Tastypie is an webservice API framework for Django. It provides a convenient, yet powerful and highly customizable, abstraction for creating REST-style interfaces.
Getting Help

There are two primary ways of getting help. We have a mailing list hosted at Google ( http://groups.google.com/group/django-tastypie/ ) and an IRC channel ( #tastypie on irc.freenode.net ) to get help, want to bounce idea or generally shoot the breeze.
Quick Start

    Add tastypie to INSTALLED_APPS .

    Create an api directory in your app with a bare __init__.py .

    Create an <my_app>/api/resources.py file and place the following in it:

     from tastypie.resources import ModelResource
    from my_app.models import MyModel


    class MyModelResource(ModelResource):
        class Meta:
            queryset = MyModel.objects.all()
            allowed_methods = ['get']

    In your root URLconf, add the following code (around where the admin code might be):

     from tastypie.api import Api
    from my_app.api.resources import MyModelResource

    v1_api = Api(api_name='v1')
    v1_api.register(MyModelResource())

    urlpatterns = patterns('',
      # ...more URLconf bits here...
      # Then add:
      (r'^api/', include(v1_api.urls)),
    )

    Hit http://localhost:8000/api/v1/?format=json in your browser!

Requirements

Tastypie requires the following modules. If you use Pip , you can install the necessary bits via the included requirements.txt :
Required

    Python 2.6+ or Python 3.3+
    Django 1.5+
    dateutil ( http://labix.org/python-dateutil ) >= 2.1

Optional

    python_digest ( https://bitbucket.org/akoha/python-digest/ )
    lxml ( http://lxml.de/ ) and defusedxml ( https://bitbucket.org/tiran/defusedxml ) if using the XML serializer
    pyyaml ( http://pyyaml.org/ ) if using the YAML serializer
    biplist ( https://pypi.python.org/pypi/biplist ) if using the binary plist serializer

Why Tastypie?

There are other, better known API frameworks out there for Django. You need to assess the options available and decide for yourself. That said, here are some common reasons for tastypie.

    You need an API that is RESTful and uses HTTP well.
    You want to support deep relations.
    You DON'T want to have to write your own serializer to make the output right.
    You want an API framework that has little magic, very flexible and maps well to the problem domain.
    You want/need XML serialization that is treated equally to JSON (and YAML is there too).
    You want to support my perceived NIH syndrome, which is less about NIH and more about trying to help out friends/coworkers.

Reference Material

    http://github.com/toastdriven/django-tastypie/tree/master/tests/basic shows basic usage of tastypie
    http://en.wikipedia.org/wiki/REST
    http://en.wikipedia.org/wiki/List_of_HTTP_status_codes
    http://www.ietf.org/rfc/rfc2616.txt
    http://jacobian.org/writing/rest-worst-practices/

Running The Tests

The easiest way to get setup to run Tastypie's tests looks like:

 $ git clone https://github.com/toastdriven/django-tastypie.git
$ cd django-tastypie
$ virtualenv env
$ . env/bin/activate
$ ./env/bin/pip install -U -r requirements.txt

Then running the tests is as simple as:

 # From the same directory as above:
$ ./env/bin/pip install -U -r tests/requirements.txt
$ ./env/bin/pip install tox
$ tox

Tastypie is maintained with all tests passing at all times for released dependencies. (At times tests may fail with development versions of Django. These will be noted as allowed failures in the .travis.yml file.) If you find a failure, please report it along with the versions of the installed software.
Jump to Line
Go

    Status
    API
    Training
    Shop
    Blog
    About

    Â© 2014 GitHub , Inc.
    Terms
    Privacy
    Security
    Contact

Something went wrong with that request. Please try again.
